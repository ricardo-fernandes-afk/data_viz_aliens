import pandas as pd
import plotly.graph_objects as go
import plotly.io as pio
import os

# Basisverzeichnis ermitteln (Projektstruktur relativ halten)
base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))
data_path = os.path.join(base_dir, "E01_data", "ufo_cleaned.csv")
output_path = os.path.join(base_dir, "E03_story", "E03_1_charts", "slide1_timeline.html")

# Daten einlesen
df = pd.read_csv(data_path, low_memory=False)
df['datetime'] = pd.to_datetime(df['datetime'], errors='coerce')
df['year'] = df['datetime'].dt.year
df = df[df['year'].between(1940, 2024)]

# Sichtungen pro Jahr
sightings_per_year = df['year'].value_counts().sort_index()
rolling_avg = sightings_per_year.rolling(window=5, center=True).mean()

# Plot erstellen (interaktiv!)
fig = go.Figure()

fig.add_trace(go.Scatter(
    x=sightings_per_year.index,
    y=sightings_per_year.values,
    mode='lines',
    name='Sightings (raw)',
    line=dict(color='#39FF14', width=1),
    opacity=0.4
))

fig.add_trace(go.Scatter(
    x=rolling_avg.index,
    y=rolling_avg.values,
    mode='lines',
    name='5-Year Rolling Avg',
    line=dict(color='white', width=3)
))

# Annotations
highlight_years = {
    1997: "Phoenix Lights",
    2001: "Post-9/11 spike",
    2004: "USS Nimitz",
    2020: "Pentagon video"
}

for year, label in highlight_years.items():
    if year in sightings_per_year.index:
        fig.add_annotation(
            x=year,
            y=sightings_per_year[year],
            text=label,
            showarrow=True,
            arrowhead=1,
            arrowcolor='white',
            font=dict(color='white'),
            bgcolor="rgba(0,0,0,0.6)"
        )

# Layout anpassen
fig.update_layout(
    template="plotly_dark",
    title="When the Sky Went Crazy",
    xaxis_title="Year",
    yaxis_title="Number of Sightings",
    legend=dict(font=dict(color='white')),
    margin=dict(l=40, r=40, t=80, b=40)
)

# Ordner erstellen & speichern
os.makedirs(os.path.dirname(output_path), exist_ok=True)
pio.write_html(fig, file=output_path, auto_open=False)
print(f"âœ… Slide 1 gespeichert: {output_path}")
